/****************************************************************
 *
 * Environmental monitor
 *
 * Track changes in temperature, barometric pressure and humidity
 * and store the reading every two minutes to an SD card.
 * Live data including date and time are displayed on a 20 x 4
 * LCD module.
 *
 * Initial code prepares the LCD for display and exercises
 * some of its functions.
 *
 * LCD interface based on:
 * https://www.instructables.com/id/Using-PCF8574-backpacks-with-LCD-modules-and-Ardui/
 *
 * See also:
 * https://docs.labs.mediatek.com/resource/linkit7697-arduino/en/tutorial/driving-1602-lcd-with-pcf8574-pcf8574a
 *
 * Hardware Setup
 *
 * Backpack     Arduino
 * ========     =======
 *    SDA          A4
 *    SCL          A5
 *
/****************************************************************

/*
 * LCD Library
 *
 * https://bitbucket.org/fmalpartida/new-liquidcrystal/downloads
 *
 * Usage: https://bitbucket.org/fmalpartida/new-liquidcrystal/wiki/Home
 *
/*

#include <Wire.h>
#include <LCD.h>
#include <LiquidCrystal_I2C.h>

// Set the I2C address of the LCD controller
//    0x3F for PCF8574A
//    0x27 for PCF8574
#define  LCDADDR 0x27            // LCD backpack i2c address in hex

//this is for a unlabeled i2c LCD interface board which allows for changing its address
//
//                      addr, en,rw,rs,d4,d5,d6,d7
//LiquidCrystal_I2C lcd(0x27,  2, 1, 0, 4, 5, 6, 7);  // Set the LCD I2C address

LiquidCrystal_I2C lcd(LCDADDR);  // Set the LCD I2C address (this line can change depending on how the LCD is connected
LCD *myLCD = &lcd;               // Get a pointer to the specific display

// define the custom bitmaps
// up to 8 bitmaps are supported
const uint8_t my_bitmap[][8] =
{
  // chequer
  {0x15, 0x0A, 0x15, 0x0A, 0x15, 0x0A, 0x15, 0x00},
  // up arrow
  {0x04, 0x0E, 0x1F, 0x04, 0x04, 0x04, 0x00, 0x00},
  // down arrow
  {0x00, 0x00, 0x04, 0x04, 0x04, 0x1F, 0x0E, 0x04},
  // rectangle
  {0x00, 0x1F, 0x11, 0x11, 0x11, 0x11, 0x1F, 0x00},
  // up-left arrow
  {0x1F, 0x1E, 0x1C, 0x1A, 0x11, 0x00, 0x00, 0x00},
  // up-right arrow
  {0x1F, 0x0F, 0x07, 0x0B, 0x11, 0x00, 0x00, 0x00},
  // down-left arrow
  {0x00, 0x00, 0x00, 0x11, 0x1A, 0x1C, 0x1E, 0x1F},
  // down-right arrow
  {0x00, 0x00, 0x00, 0x11, 0x0B, 0x07, 0x0F, 0x1F},
};

#define LONG_DELAY()  delay(1000)
#define SHORT_DELAY() delay(500)
#define ANIM_DELAY()  delay(400)


void setup()
{
  int i;
  int bitmap_size = sizeof(my_bitmap) / sizeof(my_bitmap[0]);
  
  // Activate LCD module
  lcd->begin(20, 4);              // 4 rows, 20 columns
  
  // register the custom bitmaps
  for (i = 0; i < bitmap_size; i++)
  {
    lcd->createChar(i, (uint8_t *)my_bitmap[i]);
  }
  
    // move the cursor to 0
  lcd->home();
  lcd->print("              Hello!");
  
  // scroll left for 5 positions
  for (int i = 0; i < 5; i++)
  {
    lcd->scrollDisplayLeft();
    
    ANIM_DELAY();
  }
  
    // clear the LCD contents and the scrolling offset
  lcd->clear();

  // turn off the backlight
  lcd->noBacklight();
  
  LONG_DELAY();

  // turn on the backlight
  lcd->backlight();
  
  lcd->print("       Hello!       ");
  // change to the starting position of the next line
  lcd->setCursor ( 0, 1 );
  lcd->print(" Blackfire Software ");
  
  // blinks the texts
  for (i = 0; i < 2; i++)
  {
    ANIM_DELAY();
    lcd->noDisplay();
    
    ANIM_DELAY();
    lcd->display();
  }
  
  LONG_DELAY();
  LONG_DELAY();

  // clear all LCD contents and settings
  lcd->clear();
  
  SHORT_DELAY();
}

void loop()
{
  int i, ch_map;

  // clear the LCD and set the string direction to left-to-right
  lcd->clear();
  lcd->leftToRight();  
  lcd->print("    LeftToR");
  
  LONG_DELAY();

  lcd->setCursor(4, 0);
  lcd->print("12345678");
  
  SHORT_DELAY();
  
  lcd->setCursor(4, 0);

  // display the custom characters. randomly select a character bitmap
  for (i = 0; i < 8; i++)
  {
    ch_map = random(8);
    
    lcd->print(char(ch_map));

    ANIM_DELAY();
  }

  lcd->setCursor(0, 1);
  lcd->print("    RightToL");
  LONG_DELAY();

  // set the string direction to right-to-left
  lcd->rightToLeft();
  lcd->setCursor(11, 1);
  lcd->print("12345678");
  SHORT_DELAY();
  
  lcd->setCursor(11, 1);

  // display the custom characters. randomly select a character bitmap
  for (i = 0; i < 8; i++)
  {
    ch_map = random(8);

    lcd->print(char(ch_map));

    ANIM_DELAY();
  }
}  